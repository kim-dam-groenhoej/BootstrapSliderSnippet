@model BootstrapSliderSnippet.ViewModels.HomeIndexVM
@{
    ViewBag.Title = "Home Page";

}

<div id="myCarousel" class="carousel slide" data-ride="carousel">
    <!-- Indicators -->
    <ol class="carousel-indicators">
        @{
            var firstItem = true;
        }
        @foreach (var slide in Model.ImageSlides)
        {
            <li data-target="#myCarousel" data-slide-to="@Model.ImageSlides.FindIndex(s => s.ID == slide.ID)" @(firstItem ? "class=active" : "")></li>

            firstItem = false;
        }
    </ol>

    <!-- Wrapper for slides -->
    <div class="carousel-inner">
        @{
            firstItem = true;
        }
        @foreach (var slide in Model.ImageSlides)
        {
            <div class="item @(firstItem ? "active" : "")">
                <img src="@slide.ImageUrl" alt="@slide.Name">
                <div class="carousel-caption">
                    <h3>@slide.Name</h3>
                    <p>@slide.ShortDescription</p>
                </div>
            </div>

            firstItem = false;
        }
    </div>

    <!-- Left and right controls -->
    <a class="left carousel-control" href="#myCarousel" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>
<br />
<div class="row">
    <div id="map"></div>

    <script>
      function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 12
        });
        var geocoder = new google.maps.Geocoder();
        geocodeAddress(geocoder, map);
      }

      function geocodeAddress(geocoder, resultsMap) {
        var address = "Møllevej, 4, 9400 Nørresundby";

        geocoder.geocode({ 'address': address }, function (results, status)
        {
            if (status === 'OK') {
                resultsMap.setCenter(results[0].geometry.location);

                // Indsæt marker ved lokationen
                var marker = new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
      }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBwqkKczdOJm5ldLTno6NDDGS9jvZmjuFg&callback=initMap">
    </script>
</div>